<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Colors -->
    <SolidColorBrush x:Key="WindowColor">#F1F1F8</SolidColorBrush>
    <SolidColorBrush x:Key="NumButtonColor">#F8F8FD</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonColor">#FDFCFD</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">#FF000000</SolidColorBrush>
    <SolidColorBrush x:Key="TextDisabledColor">#A6A6A6</SolidColorBrush>
    <SolidColorBrush x:Key="TextPressedColor">#A6A6A6</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonEqualColor">#695093</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonClickedColor">#edeef3</SolidColorBrush>
    <SolidColorBrush x:Key="FlyoutBackgroundBrush">#F1F1F8</SolidColorBrush>
    <SolidColorBrush x:Key="MenuFlyoutBackgroundBrush">#FDFCFD</SolidColorBrush>
    <SolidColorBrush x:Key="MemoryBackgroundColor">#e4e6ea</SolidColorBrush>

    <!-- Button -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                        Background="{StaticResource NumButtonColor}"
                        CornerRadius="4"
                        BorderBrush="LightGray"
                        BorderThickness="0.8">
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                          BlurRadius="1"
                                          ShadowDepth="1"
                                          Opacity="0.3"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      TextElement.Foreground="{StaticResource TextColor}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonColor}"/>
                        </Trigger>

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPressedColor}"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource WindowColor}"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter TargetName="BackgroundBorder" Property="Effect" Value="{x:Null}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                            Background="{StaticResource ButtonColor}"
                            CornerRadius="4"
                            BorderBrush="LightGray"
                            BorderThickness="0.8">
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                              BlurRadius="1"
                              ShadowDepth="1"
                              Opacity="0.3"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPressedColor}"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource WindowColor}"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter TargetName="BackgroundBorder" Property="Effect" Value="{x:Null}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Icon Button -->
    <Style x:Key="IconKeyButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NumButtonColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                            Background="{StaticResource NumButtonColor}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="LightGray"
                            BorderThickness="0.8">
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                          BlurRadius="1"
                          ShadowDepth="1"
                          Opacity="0.3"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter TargetName="BackgroundBorder" Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                   FontFamily="Segoe MDL2 Assets"
                   FontSize="18"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                   SnapsToDevicePixels="True"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboBoxStyle" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!-- Icon(Menu) Buttons -->
    <Style TargetType="Button" x:Key="IconButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource NumButtonColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                           FontFamily="Segoe MDL2 Assets"
                           FontSize="20"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                           SnapsToDevicePixels="True"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Symbol Button Style (for trash icons in panels) -->
    <Style TargetType="Button" x:Key="SymbolButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                           FontFamily="Segoe MDL2 Assets"
                           FontSize="16"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" 
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Equals Button -->
    <Style TargetType="Button" x:Key="EqualsButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonEqualColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        TextElement.Foreground="White">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="White"
                                          TextElement.FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="#77609D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Memory Button -->
    <Style TargetType="Button" x:Key="MemoryButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="10, 5"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource MemoryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Main Display Text -->
    <Style TargetType="TextBox" x:Key="DisplayTextBoxStyle">
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="MinHeight" Value="80"/>
    </Style>

    <!-- Sub Text -->
    <Style TargetType="TextBlock" x:Key="SubDisplayTextBlockStyle">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
        <Setter Property="Margin" Value="10,0,10,2"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <!-- Flyout Menu Item Style -->
    <Style TargetType="ListViewItem" x:Key="FlyoutListViewItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true" CornerRadius="4" Margin="5,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="SelectedIndicator" Fill="{StaticResource ButtonClickedColor}" Width="4" HorizontalAlignment="Left" Visibility="Collapsed" RadiusY="2" RadiusX="2" Margin="-4, -4, 0, -4"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonColor}"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter TargetName="SelectedIndicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text in Menu -->
    <Style TargetType="TextBlock" x:Key="FlyoutItemTextBlockStyle">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        
    </Style>

    <!-- Icons in Menu -->
    <Style TargetType="TextBlock" x:Key="FlyoutItemIconStyle">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
    </Style>

    <!-- TextBlock -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- ETC -->
    <Style TargetType="DatePicker">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="150"/>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="Page">
        <Setter Property="Background" Value="{StaticResource WindowColor}"/>
        <Setter Property="Opacity" Value="0"/>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Dialog Overlay Style -->
    <Style x:Key="DialogOverlayStyle" TargetType="Border">
        <Setter Property="Background" Value="#80000000"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <!-- Dialog Panel Style -->
    <Style x:Key="DialogPanelStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource WindowColor}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderBrush" Value="#20000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="MaxWidth" Value="320"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="3" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dialog Button Style -->
    <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                     VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxButtonStyle for dropdown-like buttons -->
    <Style x:Key="ComboBoxButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" 
                                          Margin="10,0,0,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock Grid.Column="1" 
                                   Text="▼" 
                                   FontSize="10"
                                   Margin="0,0,10,0"
                                   VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle Function Button Style -->
    <Style x:Key="ToggleFunctionButtonStyle" TargetType="ToggleButton">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BackgroundBorder"
                Background="{StaticResource WindowColor}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}"
                BorderBrush="LightGray"
                BorderThickness="0.8">
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                  BlurRadius="1"
                                  ShadowDepth="1"
                                  Opacity="0.3"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!-- Change background when checked -->
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonEqualColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="ToggleButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="10, 5"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource MemoryBackgroundColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPressedColor}"/>
                        </Trigger>

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonClickedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextPressedColor}"/>
                        </Trigger>

                        <!-- Checked (Toggled ON) -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ButtonColor}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonEqualColor}"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledColor}"/>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>